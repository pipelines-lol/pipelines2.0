generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model admins {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  v         Int      @map("__v")
  createdAt DateTime @db.Date
  email     String   @unique(map: "email_1")
  password  String
  updatedAt DateTime @db.Date
}

model companies {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  Employees      String[]
  v              Int?     @map("__v")
  description    String
  displayName    String
  interns        String[]
  logo           String?
  name           String
  postCompanies  Json?
  prevCompanies  Json?
  ratedEmployees String[]
  /// Multiple data types found: Float: 5.8%, Int: 94.2% out of 86 sampled entries
  rating         Json?
  schoolTally    Json?
  /// Multiple data types found: Float: 12.8%, Int: 87.2% out of 86 sampled entries
  tenure         Json?
}

model emails {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  v           Int?      @map("__v")
  createdAt   DateTime? @db.Date
  earlyAccess Boolean?
  email       String
  updatedAt   DateTime? @db.Date
}

model experiences {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model offers {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model profiles {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  v         Int      @map("__v")
  anonymous Boolean
  created   Boolean
  createdAt DateTime @db.Date
  firstName String?
  lastName  String?
  linkedin  String
  location  String
  /// Could not determine type: the field only had null or empty values in the sample set.
  offers    Json?
  pfp       String
  pipeline  Json?
  position  String
  /// Multiple data types found: String: 86.5%, String (ObjectId): 13.5% out of 89 sampled entries
  school    Json?
  updatedAt DateTime @db.Date
  userId    String
  username  String
}

model schools {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  alpha_two_code String
  companyTally   Json?
  country        String
  domains        String[]
  logo           String
  name           String
  rank           Int
  schoolTally    Json?
  state_province String?
  web_pages      String[]
}

model users {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  v         Int      @map("__v")
  createdAt DateTime @db.Date
  email     String   @unique(map: "email_1")
  profileId String
  updatedAt DateTime @db.Date
}
